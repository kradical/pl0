    0 const
    1   m = 7, n = 85;
    1 var
    1   i,x,y,z,q,r;
    1 procedure multiply;
    1 var
    2   a,b;
    2 begin
    3   a := x; b := y; z := 0;
    9   while b > 0 do
   13     begin
   13       if odd(b) then z := z+a;
   20       a := 2*a; b := b/2;
   28     end
   28   end;
2 int   0    5
3 lod   1    4
4 sto   0    3
5 lod   1    5
6 sto   0    4
7 lit   0    0
8 sto   1    6
9 lod   0    4
10 lit   0    0
11 opr   0   12
12 jpc   0   29
13 lod   0    4
14 opr   0    6
15 jpc   0   20
16 lod   1    6
17 lod   0    3
18 opr   0    2
19 sto   1    6
20 lit   0    2
21 lod   0    3
22 opr   0    4
23 sto   0    3
24 lod   0    4
25 lit   0    2
26 opr   0    5
27 sto   0    4
28 jmp   0    9
29 ret   0    0
   30 
   30 procedure divide; 
   30 var w;
   31 begin
   32   r := x; q := 0; w := y;
   38   while w <= r do w := 2*w;
   47   while w > y do
   51     begin q := 2*q; w := w/2;
   59       if w <= r then
   62       begin
   63         r := r-w; q := q+1;
   71       end
   71     end
   71 end;
31 int   0    4
32 lod   1    4
33 sto   1    8
34 lit   0    0
35 sto   1    7
36 lod   1    5
37 sto   0    3
38 lod   0    3
39 lod   1    8
40 opr   0   13
41 jpc   0   47
42 lit   0    2
43 lod   0    3
44 opr   0    4
45 sto   0    3
46 jmp   0   38
47 lod   0    3
48 lod   1    5
49 opr   0   12
50 jpc   0   72
51 lit   0    2
52 lod   1    7
53 opr   0    4
54 sto   1    7
55 lod   0    3
56 lit   0    2
57 opr   0    5
58 sto   0    3
59 lod   0    3
60 lod   1    8
61 opr   0   13
62 jpc   0   71
63 lod   1    8
64 lod   0    3
65 opr   0    3
66 sto   1    8
67 lod   1    7
68 lit   0    1
69 opr   0    2
70 sto   1    7
71 jmp   0   47
72 ret   0    0
   73 
   73 procedure gcd;
   73 var
   74   f,g;
   74 begin
   75   f := x; g := y;
   79   while f # g do
   83     begin if f<g then g := g-f;
   91           if g<f then f := f-g;
   99     end;
  100   z := f;
  102 end;
74 int   0    5
75 lod   1    4
76 sto   0    3
77 lod   1    5
78 sto   0    4
79 lod   0    3
80 lod   0    4
81 opr   0    9
82 jpc   0  100
83 lod   0    3
84 lod   0    4
85 opr   0   10
86 jpc   0   91
87 lod   0    4
88 lod   0    3
89 opr   0    3
90 sto   0    4
91 lod   0    4
92 lod   0    3
93 opr   0   10
94 jpc   0   99
95 lod   0    3
96 lod   0    4
97 opr   0    3
98 sto   0    3
99 jmp   0   79
100 lod   0    3
101 sto   1    6
102 ret   0    0
  103 
  103 begin
  104   i:=1;
  106   while i#0 do
  110   begin
  110     x := m; y := n; call multiply;
  115     x := 25; y := 3; call divide;
  120     x := 84; y := 36; call gcd;
  125     i:=i-1;
  129   end;
  130 end.
103 int   0    9
104 lit   0    1
105 sto   0    3
106 lod   0    3
107 lit   0    0
108 opr   0    9
109 jpc   0  130
110 lit   0    7
111 sto   0    4
112 lit   0   85
113 sto   0    5
114 cal   0    2
115 lit   0   25
116 sto   0    4
117 lit   0    3
118 sto   0    5
119 cal   0   31
120 lit   0   84
121 sto   0    4
122 lit   0   36
123 sto   0    5
124 cal   0   74
125 lod   0    3
126 lit   0    1
127 opr   0    3
128 sto   0    3
129 jmp   0  106
130 ret   0    0
Start PL/0
1
7
85
7
85
0
7
14
42
28
21
35
56
10
112
5
147
224
2
448
1
595
896
0
25
3
25
0
3
6
12
24
48
0
24
1
1
2
12
4
6
8
3
84
36
84
36
48
12
24
12
12
0
End PL/0
